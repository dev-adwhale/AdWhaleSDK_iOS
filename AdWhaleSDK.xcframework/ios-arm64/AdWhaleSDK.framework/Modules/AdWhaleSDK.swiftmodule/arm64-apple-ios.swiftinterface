// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 effective-4.1.50 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 4 -enforce-exclusivity=checked -Onone -module-name AdWhaleSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AdWhaleSDK
import AppTrackingTransparency
import CaulySDK
import Foundation
import GoogleMobileAds
import OSLog
import Swift
import UIKit
import UserMessagingPlatform
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class AdWhaleAds : ObjectiveC.NSObject {
  @objc public static let sharedInstance: AdWhaleSDK.AdWhaleAds
  @objc public func initialize(_ appId: Swift.String = "0", completionHandler: @escaping () -> Swift.Void)
  @objc public func initialize(appId: Swift.String = "0", rootViewController: UIKit.UIViewController, useGdpr: Swift.Bool, testDevices: [Swift.String]?, completionHandler: @escaping () -> Swift.Void)
  @objc public func gdpr(_ rootViewController: UIKit.UIViewController, testDevices: [Swift.String]?, completionHandler: @escaping () -> Swift.Void)
  @objc public func resetGDPR(completionHandler: @escaping () -> Swift.Void)
  @objc public func canShowAds() -> Swift.Bool
  @objc public func isGDPR() -> Swift.Bool
  @objc public func setLogLevel(logLevel: AdWhaleSDK.AdWhaleLogLevel)
  @objc public func AdWhaleRequest() -> GoogleMobileAds.GADRequest?
  @objc public func setTestDeviceIdentifiers(testDeviceIdentifiers: Swift.String)
  @objc public func showAdInspector(viewController: UIKit.UIViewController)
  @objc public func showAdInspector(viewController: UIKit.UIViewController, completion: @escaping (Swift.Optional<(any Swift.Error)>) -> ())
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class AdWhaleRewardAd : ObjectiveC.NSObject, GoogleMobileAds.GADFullScreenContentDelegate {
  @objc public var rewardDelegate: (any AdWhaleSDK.AdWhaleRewardDelegate)?
  @objc public func load(_ adUnitId: Swift.String)
  @objc public func show(_ rootViewController: UIKit.UIViewController)
  @objc public func ad(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd, didFailToPresentFullScreenContentWithError error: any Swift.Error)
  @objc public func adWillPresentFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
  @objc public func adDidDismissFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol AdWhaleRewardDelegate {
  @objc func adDidReceiveRewardAd(_ ad: AdWhaleSDK.AdWhaleRewardAd)
  @objc func adDidEarnReward(_ reward: AdWhaleSDK.AdWhaleReward)
  @objc func adDidFailToReceiveRewardAdWithError(_ error: any Swift.Error)
  @objc func ad(_ ad: AdWhaleSDK.AdWhaleRewardAd, didFailToPresentRewardAdWithError error: any Swift.Error)
  @objc func adWillPresentRewardAd(_ ad: AdWhaleSDK.AdWhaleRewardAd)
  @objc func adDidDismissRewardAd(_ ad: AdWhaleSDK.AdWhaleRewardAd)
}
@objc @_inheritsConvenienceInitializers public class AdWhaleInterstitialAd : ObjectiveC.NSObject {
  @objc public var interstitialDelegate: (any AdWhaleSDK.AdWhaleInterstitialDelegate)?
  @objc public func load(_ adUnitId: Swift.String)
  @objc public func show(_ rootViewController: UIKit.UIViewController)
  @objc override dynamic public init()
  @objc deinit
}
extension AdWhaleSDK.AdWhaleInterstitialAd : GoogleMobileAds.GADFullScreenContentDelegate {
  @objc dynamic public func ad(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd, didFailToPresentFullScreenContentWithError error: any Swift.Error)
  @objc dynamic public func adWillPresentFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
  @objc dynamic public func adDidDismissFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
}
@objc public protocol AdWhaleInterstitialDelegate {
  @objc func adDidReceiveInterstitialAd(_ ad: AdWhaleSDK.AdWhaleInterstitialAd)
  @objc func adDidFailToReceiveInterstitialAdWithError(_ error: any Swift.Error)
  @objc func ad(_ ad: AdWhaleSDK.AdWhaleInterstitialAd, didFailToPresentInterstitialAdWithError error: any Swift.Error)
  @objc func adWillPresentInterstitialAd(_ ad: AdWhaleSDK.AdWhaleInterstitialAd)
  @objc func adDidDismissInterstitialAd(_ ad: AdWhaleSDK.AdWhaleInterstitialAd)
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) open class AdWhaleNativeAdView : GoogleMobileAds.GADNativeAdView, AdWhaleSDK.AdWhaleRenderable {
  @_Concurrency.MainActor(unsafe) @objc open func adTitleLabel() -> UIKit.UILabel
  @_Concurrency.MainActor(unsafe) @objc open func adBodyLabel() -> UIKit.UILabel
  @_Concurrency.MainActor(unsafe) @objc open func adCallToActionButton() -> UIKit.UIButton
  @_Concurrency.MainActor(unsafe) @objc open func adProfileNameLabel() -> UIKit.UILabel
  @_Concurrency.MainActor(unsafe) @objc open func adProfileIconView() -> UIKit.UIImageView
  @_Concurrency.MainActor(unsafe) @objc open func adMediaView() -> AdWhaleSDK.AdWhaleMediaView
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class AdWhaleMediaView : GoogleMobileAds.GADMediaView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public protocol AdWhaleRenderable {
  @objc func adTitleLabel() -> UIKit.UILabel
  @objc func adBodyLabel() -> UIKit.UILabel
  @objc func adCallToActionButton() -> UIKit.UIButton
  @objc func adProfileNameLabel() -> UIKit.UILabel
  @objc func adProfileIconView() -> UIKit.UIImageView
  @objc func adMediaView() -> AdWhaleSDK.AdWhaleMediaView
}
@objc @_hasMissingDesignatedInitializers public class AdWhaleReward : ObjectiveC.NSObject {
  public var type: Swift.String
  public var amount: Foundation.NSDecimalNumber
  @objc deinit
}
public let ADWHALE_SDK_VERSION: Swift.String
public let ADWHALE_ADAPTER_VERSION: Swift.String
@objc public enum AdWhaleGdprType : Swift.Int {
  case popupLocation = 0
  case popupDebug
  case directNotRequired
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum AdWhaleAdSize : Swift.Int {
  case banner = 0
  case largeBanner
  case mediumRectangle
  case fullBanner
  case leaderboard
  public var size: CoreFoundation.CGSize {
    get
  }
  public var printSize: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum AdWhaleNativeAspectRatio : Swift.Int {
  case landscape = 0
  case square
  case portrait
  case any
  public var printRatio: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum AdWhaleLogLevel : Swift.Int, Swift.Comparable {
  public static func < (lhs: AdWhaleSDK.AdWhaleLogLevel, rhs: AdWhaleSDK.AdWhaleLogLevel) -> Swift.Bool
  case error = 0
  case notice
  case info
  case debug
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class AdWhaleBannerAd : UIKit.UIView, GoogleMobileAds.GADBannerViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @objc @_Concurrency.MainActor(unsafe) public init(_ adSize: AdWhaleSDK.AdWhaleAdSize)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) public func setAdUnitID(_ adUnitID: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func setAdSize(_ adSize: AdWhaleSDK.AdWhaleAdSize)
  @objc @_Concurrency.MainActor(unsafe) public func setDelegate(_ delegate: any AdWhaleSDK.AdWhaleBannerDelegate)
  @objc @_Concurrency.MainActor(unsafe) public func setRootViewController(_ rootViewController: UIKit.UIViewController)
  @objc @_Concurrency.MainActor(unsafe) public func load()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc public func bannerViewDidReceiveAd(_ bannerView: GoogleMobileAds.GADBannerView)
  @_Concurrency.MainActor(unsafe) @objc public func bannerView(_ bannerView: GoogleMobileAds.GADBannerView, didFailToReceiveAdWithError error: any Swift.Error)
  @_Concurrency.MainActor(unsafe) @objc public func bannerViewDidRecordImpression(_ bannerView: GoogleMobileAds.GADBannerView)
  @_Concurrency.MainActor(unsafe) @objc public func bannerViewWillPresentScreen(_ bannerView: GoogleMobileAds.GADBannerView)
  @_Concurrency.MainActor(unsafe) @objc public func bannerViewWillDismissScreen(_ bannerView: GoogleMobileAds.GADBannerView)
  @_Concurrency.MainActor(unsafe) @objc public func bannerViewDidDismissScreen(_ bannerView: GoogleMobileAds.GADBannerView)
  @_Concurrency.MainActor(unsafe) @objc public func bannerViewDidRecordClick(_ bannerView: GoogleMobileAds.GADBannerView)
  @objc deinit
}
@objc public protocol AdWhaleBannerDelegate {
  @objc func bannerViewDidReceiveAd(_ bannerView: AdWhaleSDK.AdWhaleBannerAd)
  @objc func bannerView(_ bannerView: AdWhaleSDK.AdWhaleBannerAd, didFailToReceiveAdWithError error: any Swift.Error)
  @objc func bannerViewDidRecordImpression(_ bannerView: AdWhaleSDK.AdWhaleBannerAd)
  @objc func bannerViewWillPresentScreen(_ bannerView: AdWhaleSDK.AdWhaleBannerAd)
  @objc func bannerViewWillDismissScreen(_ bannerView: AdWhaleSDK.AdWhaleBannerAd)
  @objc func bannerViewDidDismissScreen(_ bannerView: AdWhaleSDK.AdWhaleBannerAd)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class AdWhaleAppOpenAd : ObjectiveC.NSObject {
  @objc public var adUnitId: Swift.String?
  weak public var appOpenAdViewDelegate: (any AdWhaleSDK.AdWhaleAppOpenAdViewDelegate)?
  @objc weak public var appOpenAdDelegate: (any AdWhaleSDK.AdWhaleAppOpenAdDelegate)?
  @objc public static let shared: AdWhaleSDK.AdWhaleAppOpenAd
  @objc public func loadAd()
  @objc public func showAdIfAvailable()
  @objc public func showAdIfAvailable(_ viewController: UIKit.UIViewController?)
  @objc deinit
}
@objc public protocol AdWhaleAppOpenAdViewDelegate {
  @objc func appOpenAdDidComplete(_ ad: AdWhaleSDK.AdWhaleAppOpenAd)
}
@objc public protocol AdWhaleAppOpenAdDelegate {
  @objc func adDidReceiveAppOpenAd(_ ad: AdWhaleSDK.AdWhaleAppOpenAd)
  @objc func adDidFailToReceiveAppOpenAd(error: any Swift.Error)
  @objc func adWillPresentAppOpenAd()
  @objc func adDidDismissAppOpenAd()
  @objc func adDidFailToPresentAppOpenAd(error: any Swift.Error)
}
extension AdWhaleSDK.AdWhaleAppOpenAd : GoogleMobileAds.GADFullScreenContentDelegate {
  @objc dynamic public func adWillPresentFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
  @objc dynamic public func adDidDismissFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
  @objc dynamic public func ad(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd, didFailToPresentFullScreenContentWithError error: any Swift.Error)
}
@objc @_inheritsConvenienceInitializers public class AdWhaleNativeAd : ObjectiveC.NSObject {
  @objc public var delegate: (any AdWhaleSDK.AdWhaleNativeAdDelegate)?
  @objc public var rootViewController: UIKit.UIViewController?
  @objc public var title: Swift.String?
  @objc public var body: Swift.String?
  @objc public var profileName: Swift.String?
  @objc public var callToAction: Swift.String?
  @objc public var icon: UIKit.UIImage?
  @objc public var mediaContent: GoogleMobileAds.GADMediaContent?
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol AdWhaleNativeAdDelegate {
  @objc func nativeAdDidClickAd(_ nativeAd: AdWhaleSDK.AdWhaleNativeAd)
  @objc func nativeAdDidImpression(_ nativeAd: AdWhaleSDK.AdWhaleNativeAd)
  @objc func nativeAdWillPresentScreen(_ nativeAd: AdWhaleSDK.AdWhaleNativeAd)
  @objc func nativeAdWillDismissScreen(_ nativeAd: AdWhaleSDK.AdWhaleNativeAd)
  @objc func nativeAdDidDismissScreen(_ nativeAd: AdWhaleSDK.AdWhaleNativeAd)
  @objc func nativeAdWillLeaveApplication(_ nativeAd: AdWhaleSDK.AdWhaleNativeAd)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class AdWhaleNativeAdLoader : ObjectiveC.NSObject {
  @objc public var delegate: (any AdWhaleSDK.AdWhaleNativeAdLoaderDelegate)?
  @objc public static let sharedInstance: AdWhaleSDK.AdWhaleNativeAdLoader
  @objc public func initialize(adUnitId: Swift.String, rootViewController: UIKit.UIViewController)
  @objc public func initialize(adUnitId: Swift.String, rootViewController: UIKit.UIViewController, aspectRatioOption: AdWhaleSDK.AdWhaleNativeAspectRatio)
  @objc public func loadAd()
  @objc public func bind(_ nativeAdView: AdWhaleSDK.AdWhaleNativeAdView)
  @objc public func bindView(_ renderingView: UIKit.UIView) -> AdWhaleSDK.AdWhaleNativeAdView?
  @objc deinit
}
extension AdWhaleSDK.AdWhaleNativeAdLoader : GoogleMobileAds.GADNativeAdLoaderDelegate, GoogleMobileAds.GADNativeAdDelegate {
  @objc dynamic public func adLoader(_ adLoader: GoogleMobileAds.GADAdLoader, didReceive nativeAd: GoogleMobileAds.GADNativeAd)
  @objc dynamic public func adLoader(_ adLoader: GoogleMobileAds.GADAdLoader, didFailToReceiveAdWithError error: any Swift.Error)
  @objc dynamic public func nativeAdDidRecordImpression(_ nativeAd: GoogleMobileAds.GADNativeAd)
  @objc dynamic public func nativeAdDidRecordClick(_ nativeAd: GoogleMobileAds.GADNativeAd)
  @objc dynamic public func nativeAdWillPresentScreen(_ nativeAd: GoogleMobileAds.GADNativeAd)
  @objc dynamic public func nativeAdWillDismissScreen(_ nativeAd: GoogleMobileAds.GADNativeAd)
  @objc dynamic public func nativeAdDidDismissScreen(_ nativeAd: GoogleMobileAds.GADNativeAd)
}
@objc public protocol AdWhaleNativeAdLoaderDelegate {
  @objc func nativeAdLoaderDidReceiveAd(_ nativeAd: AdWhaleSDK.AdWhaleNativeAd)
  @objc func nativeAdLoaderDidFailToReceiveAd(_ nativeAd: AdWhaleSDK.AdWhaleNativeAdLoader, error: any Swift.Error)
}
extension AdWhaleSDK.AdWhaleGdprType : Swift.Equatable {}
extension AdWhaleSDK.AdWhaleGdprType : Swift.Hashable {}
extension AdWhaleSDK.AdWhaleGdprType : Swift.RawRepresentable {}
extension AdWhaleSDK.AdWhaleAdSize : Swift.Equatable {}
extension AdWhaleSDK.AdWhaleAdSize : Swift.Hashable {}
extension AdWhaleSDK.AdWhaleAdSize : Swift.RawRepresentable {}
extension AdWhaleSDK.AdWhaleNativeAspectRatio : Swift.Equatable {}
extension AdWhaleSDK.AdWhaleNativeAspectRatio : Swift.Hashable {}
extension AdWhaleSDK.AdWhaleNativeAspectRatio : Swift.RawRepresentable {}
extension AdWhaleSDK.AdWhaleLogLevel : Swift.Hashable {}
extension AdWhaleSDK.AdWhaleLogLevel : Swift.RawRepresentable {}
